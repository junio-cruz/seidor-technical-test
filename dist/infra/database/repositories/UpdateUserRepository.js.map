{
  "version": 3,
  "sources": ["../../../../src/infra/database/repositories/UpdateUserRepository.ts", "sentry-debug-id-stub:_sentry-debug-id-injection-stub?sentry-module-id=27b9ba8a-84ee-426c-8a78-04605b3e19ef", "../../../../src/infra/database/session.ts", "../../../../src/infra/database/repositories/UpdateUserRepository.ts"],
  "sourcesContent": ["\n              import \"_sentry-debug-id-injection-stub\";\n              import * as OriginalModule from \"./src/infra/database/repositories/UpdateUserRepository.ts\";\n              export default OriginalModule.default;\n              export * from \"./src/infra/database/repositories/UpdateUserRepository.ts\";", ";!function(){try{var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},n=(new Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]=\"910d2403-e281-49fe-b495-653008dcf3fe\",e._sentryDebugIdIdentifier=\"sentry-dbid-910d2403-e281-49fe-b495-653008dcf3fe\")}catch(e){}}();", "import {User} from \"../../domain/entities/User\";\n\nexport class DatabaseSession  {\n  private clientSession: User[];\n\n  constructor(private readonly entityModel: User[]) {\n    this.clientSession = entityModel\n  }\n\n  public start(): boolean {\n    this.clientSession = [] as User[];\n    return !!this.clientSession\n  }\n\n  public getSession(): User[] {\n    if (this.clientSession) {\n      return this.clientSession;\n    }\n    throw new Error('START_DATABASE_ERROR');\n  }\n\n  public updateSession(input: User[]): User[] {\n    this.clientSession = input;\n    return this.clientSession;\n  }\n}\n\nexport const databaseInstance = new DatabaseSession([]);\n\n", "import {User} from '../../../domain/entities/User';\nimport {\n  IUpdateUserRepository,\n  UpdateUserRepositoryInput,\n  UpdateUserRepositoryOutput,\n} from '../../../domain/repositories/IUpdateUserRepository';\nimport {databaseInstance} from '../session';\n\nexport class UpdateUserRepository implements IUpdateUserRepository {\n  public async execute(\n    input: UpdateUserRepositoryInput,\n  ): Promise<UpdateUserRepositoryOutput> {\n    let response: User | any;\n    const databaseSession = databaseInstance.getSession();\n    const user_found = databaseSession.find((user) => user.user_id === input.user_id\n        || input.user_id === user.email) as User || null;\n    if (!user_found){\n      return user_found;\n    }\n    const database_session_updated = databaseSession.map(user => {\n      if (user.user_id === input.user_id) {\n        if (user.user_id === input.user_id) {\n          response = {\n            user_id: input.user_id,\n            ...input.to_update,\n            email: user.email,\n            created_at: user.created_at\n          }\n          return response\n        }\n      }\n      return user;\n    });\n    databaseInstance.updateSession(database_session_updated);\n    return response;\n  }\n}\n"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,0BAAAE,EAAA,YAAAC,IAAA,eAAAC,EAAAJ,ICAE,UAAU,CAAC,GAAG,CAAC,IAAIK,EAAe,OAAO,OAApB,IAA2B,OAAoB,OAAO,OAApB,IAA2B,OAAoB,OAAO,KAApB,IAAyB,KAAK,CAAC,EAAEC,EAAG,IAAI,QAAO,MAAMA,IAAID,EAAE,gBAAgBA,EAAE,iBAAiB,CAAC,EAAEA,EAAE,gBAAgBC,CAAC,EAAE,uCAAuCD,EAAE,yBAAyB,mDAAmD,MAAS,CAAC,CAAC,GAAE,ECE5U,IAAME,EAAN,KAAuB,CAG5B,YAA6BC,EAAqB,CAArB,iBAAAA,EAC3B,KAAK,cAAgBA,CACvB,CAJQ,cAMD,OAAiB,CACtB,YAAK,cAAgB,CAAC,EACf,CAAC,CAAC,KAAK,aAChB,CAEO,YAAqB,CAC1B,GAAI,KAAK,cACP,OAAO,KAAK,cAEd,MAAM,IAAI,MAAM,sBAAsB,CACxC,CAEO,cAAcC,EAAuB,CAC1C,YAAK,cAAgBA,EACd,KAAK,aACd,CACF,EAEaC,EAAmB,IAAIH,EAAgB,CAAC,CAAC,ECnB/C,IAAMI,EAAN,KAA4D,CACjE,MAAa,QACXC,EACqC,CACrC,IAAIC,EACEC,EAAkBC,EAAiB,WAAW,EAC9CC,EAAaF,EAAgB,KAAMG,GAASA,EAAK,UAAYL,EAAM,SAClEA,EAAM,UAAYK,EAAK,KAAK,GAAa,KAChD,GAAI,CAACD,EACH,OAAOA,EAET,IAAME,EAA2BJ,EAAgB,IAAIG,GAC/CA,EAAK,UAAYL,EAAM,SACrBK,EAAK,UAAYL,EAAM,SACzBC,EAAW,CACT,QAASD,EAAM,QACf,GAAGA,EAAM,UACT,MAAOK,EAAK,MACZ,WAAYA,EAAK,UACnB,EACOJ,GAGJI,CACR,EACD,OAAAF,EAAiB,cAAcG,CAAwB,EAChDL,CACT,CACF,EHjCc,IAAOM,EAAuB",
  "names": ["UpdateUserRepository_exports", "__export", "UpdateUserRepository", "UpdateUserRepository_default", "__toCommonJS", "e", "n", "DatabaseSession", "entityModel", "input", "databaseInstance", "UpdateUserRepository", "input", "response", "databaseSession", "databaseInstance", "user_found", "user", "database_session_updated", "UpdateUserRepository_default"]
}
