{
  "version": 3,
  "sources": ["../../../../src/infra/database/repositories/CreateUserRepository.ts", "sentry-debug-id-stub:_sentry-debug-id-injection-stub?sentry-module-id=15608814-e799-459d-90f6-ceda465525a1", "../../../../src/infra/database/session.ts", "../../../../src/infra/database/repositories/CreateUserRepository.ts"],
  "sourcesContent": ["\n              import \"_sentry-debug-id-injection-stub\";\n              import * as OriginalModule from \"./src/infra/database/repositories/CreateUserRepository.ts\";\n              export default OriginalModule.default;\n              export * from \"./src/infra/database/repositories/CreateUserRepository.ts\";", ";!function(){try{var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},n=(new Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]=\"410655b9-7d1e-41fd-bc14-1a49bfe6ec06\",e._sentryDebugIdIdentifier=\"sentry-dbid-410655b9-7d1e-41fd-bc14-1a49bfe6ec06\")}catch(e){}}();", "import {User} from \"../../domain/entities/User\";\n\nexport class DatabaseSession  {\n  private clientSession: User[];\n\n  constructor(private readonly entityModel: User[]) {\n    this.clientSession = entityModel\n  }\n\n  public start(): boolean {\n    this.clientSession = [] as User[];\n    return !!this.clientSession\n  }\n\n  public getSession(): User[] {\n    if (this.clientSession) {\n      return this.clientSession;\n    }\n    throw new Error('START_DATABASE_ERROR');\n  }\n\n  public updateSession(input: User[]): User[] {\n    this.clientSession = input;\n    return this.clientSession;\n  }\n}\n\nexport const databaseInstance = new DatabaseSession([]);\n\n", "import { databaseInstance } from '../session';\nimport {\n  CreateUserRepositoryInput,\n  CreateUserRepositoryOutput,\n  ICreateUserRepository,\n} from '../../../domain/repositories/ICreateUserRepository';\n\nexport class CreateUserRepository implements ICreateUserRepository {\n  public async execute(\n    input: CreateUserRepositoryInput,\n  ): Promise<CreateUserRepositoryOutput> {\n    const databaseSession = databaseInstance.getSession();\n    databaseSession.push(input);\n    return databaseSession.find((user) => user.user_id === input.user_id) || input;\n  }\n}\n"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,0BAAAE,EAAA,YAAAC,IAAA,eAAAC,EAAAJ,ICAE,UAAU,CAAC,GAAG,CAAC,IAAIK,EAAe,OAAO,OAApB,IAA2B,OAAoB,OAAO,OAApB,IAA2B,OAAoB,OAAO,KAApB,IAAyB,KAAK,CAAC,EAAEC,EAAG,IAAI,QAAO,MAAMA,IAAID,EAAE,gBAAgBA,EAAE,iBAAiB,CAAC,EAAEA,EAAE,gBAAgBC,CAAC,EAAE,uCAAuCD,EAAE,yBAAyB,mDAAmD,MAAS,CAAC,CAAC,GAAE,ECE5U,IAAME,EAAN,KAAuB,CAG5B,YAA6BC,EAAqB,CAArB,iBAAAA,EAC3B,KAAK,cAAgBA,CACvB,CAJQ,cAMD,OAAiB,CACtB,YAAK,cAAgB,CAAC,EACf,CAAC,CAAC,KAAK,aAChB,CAEO,YAAqB,CAC1B,GAAI,KAAK,cACP,OAAO,KAAK,cAEd,MAAM,IAAI,MAAM,sBAAsB,CACxC,CAEO,cAAcC,EAAuB,CAC1C,YAAK,cAAgBA,EACd,KAAK,aACd,CACF,EAEaC,EAAmB,IAAIH,EAAgB,CAAC,CAAC,ECpB/C,IAAMI,EAAN,KAA4D,CACjE,MAAa,QACXC,EACqC,CACrC,IAAMC,EAAkBC,EAAiB,WAAW,EACpD,OAAAD,EAAgB,KAAKD,CAAK,EACnBC,EAAgB,KAAME,GAASA,EAAK,UAAYH,EAAM,OAAO,GAAKA,CAC3E,CACF,EHZc,IAAOI,EAAuB",
  "names": ["CreateUserRepository_exports", "__export", "CreateUserRepository", "CreateUserRepository_default", "__toCommonJS", "e", "n", "DatabaseSession", "entityModel", "input", "databaseInstance", "CreateUserRepository", "input", "databaseSession", "databaseInstance", "user", "CreateUserRepository_default"]
}
