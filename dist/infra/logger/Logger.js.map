{
  "version": 3,
  "sources": ["../../../src/infra/logger/Logger.ts", "sentry-debug-id-stub:_sentry-debug-id-injection-stub?sentry-module-id=3d338ab9-4bed-43a8-9d29-2d67aefa050a", "../../../src/infra/logger/Logger.ts"],
  "sourcesContent": ["\n              import \"_sentry-debug-id-injection-stub\";\n              import * as OriginalModule from \"./src/infra/logger/Logger.ts\";\n              export default OriginalModule.default;\n              export * from \"./src/infra/logger/Logger.ts\";", ";!function(){try{var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},n=(new Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]=\"4d90461f-ba91-4c06-90c4-a789100dbdfb\",e._sentryDebugIdIdentifier=\"sentry-dbid-4d90461f-ba91-4c06-90c4-a789100dbdfb\")}catch(e){}}();", "import { EventEmitter } from 'events';\nimport { LogEntry, LogLevel } from './Manager';\n\nexport class Logger {\n  private logManager: EventEmitter;\n\n  private minLevel: number;\n\n  private module: string;\n\n  private readonly levels: { [key: string]: number } = {\n    trace: 1,\n    debug: 2,\n    info: 3,\n    warn: 4,\n    error: 5,\n  };\n\n  constructor(\n    logManager: EventEmitter,\n    module: string,\n    minLevel: string = LogLevel.INFO,\n  ) {\n    this.logManager = logManager;\n    this.module = module;\n    this.minLevel = this.levelToInt(minLevel);\n  }\n\n  public getChild(module: string): Logger {\n    const copy: Logger = new (this.constructor as { new (): Logger })();\n    copy.logManager = this.logManager;\n    copy.minLevel = this.minLevel;\n    copy.module = `${this.module} | ${module}`;\n    return copy;\n  }\n\n  /**\n   * Central logging method.\n   * @param logLevel\n   * @param message\n   * @param data\n   */\n  public log(logLevel: LogLevel, message: string, data?: any): void {\n    const level = this.levelToInt(logLevel);\n    if (level < this.minLevel) return;\n\n    const logEntry: LogEntry = {\n      level: logLevel,\n      module: this.module,\n      message,\n      data,\n    };\n\n    this.logManager.emit('log', logEntry);\n  }\n\n  public trace(message: string, data?: any): void {\n    this.log(LogLevel.TRACE, message, data);\n  }\n\n  public debug(message: string, data?: any): void {\n    this.log(LogLevel.DEBUG, message, data);\n  }\n\n  public info(message: string, data?: any): void {\n    this.log(LogLevel.INFO, message, data);\n  }\n\n  public warn(message: string, data?: any): void {\n    this.log(LogLevel.WARN, message, data);\n  }\n\n  public error(message: string, data?: any): void {\n    this.log(LogLevel.ERROR, message, data);\n  }\n\n  /**\n   * Converts a string level (trace/debug/info/warn/error) into a number\n   *\n   * @param minLevel\n   */\n  private levelToInt(minLevel: string): number {\n    if (minLevel.toLowerCase() in this.levels)\n      return this.levels[minLevel.toLowerCase()];\n    return 99;\n  }\n}\n"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,EAAA,YAAAC,IAAA,eAAAC,EAAAJ,ICAE,UAAU,CAAC,GAAG,CAAC,IAAIK,EAAe,OAAO,OAApB,IAA2B,OAAoB,OAAO,OAApB,IAA2B,OAAoB,OAAO,KAApB,IAAyB,KAAK,CAAC,EAAEC,EAAG,IAAI,QAAO,MAAMA,IAAID,EAAE,gBAAgBA,EAAE,iBAAiB,CAAC,EAAEA,EAAE,gBAAgBC,CAAC,EAAE,uCAAuCD,EAAE,yBAAyB,mDAAmD,MAAS,CAAC,CAAC,GAAE,ECG5U,IAAME,EAAN,KAAa,CACV,WAEA,SAEA,OAES,OAAoC,CACnD,MAAO,EACP,MAAO,EACP,KAAM,EACN,KAAM,EACN,MAAO,CACT,EAEA,YACEC,EACAC,EACAC,SACA,CACA,KAAK,WAAaF,EAClB,KAAK,OAASC,EACd,KAAK,SAAW,KAAK,WAAWC,CAAQ,CAC1C,CAEO,SAASD,EAAwB,CACtC,IAAME,EAAe,IAAK,KAAK,YAC/B,OAAAA,EAAK,WAAa,KAAK,WACvBA,EAAK,SAAW,KAAK,SACrBA,EAAK,OAAS,GAAG,KAAK,MAAM,MAAMF,CAAM,GACjCE,CACT,CAQO,IAAIC,EAAoBC,EAAiBC,EAAkB,CAEhE,GADc,KAAK,WAAWF,CAAQ,EAC1B,KAAK,SAAU,OAE3B,IAAMG,EAAqB,CACzB,MAAOH,EACP,OAAQ,KAAK,OACb,QAAAC,EACA,KAAAC,CACF,EAEA,KAAK,WAAW,KAAK,MAAOC,CAAQ,CACtC,CAEO,MAAMF,EAAiBC,EAAkB,CAC9C,KAAK,YAAoBD,EAASC,CAAI,CACxC,CAEO,MAAMD,EAAiBC,EAAkB,CAC9C,KAAK,YAAoBD,EAASC,CAAI,CACxC,CAEO,KAAKD,EAAiBC,EAAkB,CAC7C,KAAK,WAAmBD,EAASC,CAAI,CACvC,CAEO,KAAKD,EAAiBC,EAAkB,CAC7C,KAAK,WAAmBD,EAASC,CAAI,CACvC,CAEO,MAAMD,EAAiBC,EAAkB,CAC9C,KAAK,YAAoBD,EAASC,CAAI,CACxC,CAOQ,WAAWJ,EAA0B,CAC3C,OAAIA,EAAS,YAAY,IAAK,KAAK,OAC1B,KAAK,OAAOA,EAAS,YAAY,CAAC,EACpC,EACT,CACF,EFnFc,IAAOM,EAAuB",
  "names": ["Logger_exports", "__export", "Logger", "Logger_default", "__toCommonJS", "e", "n", "Logger", "logManager", "module", "minLevel", "copy", "logLevel", "message", "data", "logEntry", "Logger_default"]
}
