{
  "version": 3,
  "sources": ["../../../node_modules/dotenv/package.json", "../../../node_modules/dotenv/lib/main.js", "../../../src/infra/config/AppConfig.ts", "sentry-debug-id-stub:_sentry-debug-id-injection-stub?sentry-module-id=23535a3d-0398-456e-9ce7-64fd8cd645cc", "../../../src/infra/config/AppConfig.ts"],
  "sourcesContent": ["{\n  \"name\": \"dotenv\",\n  \"version\": \"16.3.2\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"funding\": \"https://github.com/motdotla/dotenv?sponsor=1\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@definitelytyped/dtslint\": \"^0.0.133\",\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.1\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^16.3.0\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n", "const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenv.org/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      throw new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development')\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    throw new Error('INVALID_DOTENV_KEY: Missing key part')\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    throw new Error('INVALID_DOTENV_KEY: Missing environment part')\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n\n  if (options && options.path && options.path.length > 0) {\n    dotenvPath = options.path\n  }\n\n  // Locate .env.vault\n  return dotenvPath.endsWith('.vault') ? dotenvPath : `${dotenvPath}.vault`\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    } else {\n      if (debug) {\n        _debug('No encoding is specified. UTF-8 is used by default')\n      }\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    let processEnv = process.env\n    if (options && options.processEnv != null) {\n      processEnv = options.processEnv\n    }\n\n    DotenvModule.populate(processEnv, parsed, options)\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _debug(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  const vaultPath = _vaultPath(options)\n\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!fs.existsSync(vaultPath)) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const msg = 'INVALID_DOTENV_KEY: It must be 64 characters long (or more)'\n      throw new Error(msg)\n    } else if (decryptionFailed) {\n      const msg = 'DECRYPTION_FAILED: Please check your DOTENV_KEY'\n      throw new Error(msg)\n    } else {\n      console.error('Error: ', error.code)\n      console.error('Error: ', error.message)\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    throw new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n", "\n              import \"_sentry-debug-id-injection-stub\";\n              import * as OriginalModule from \"./src/infra/config/AppConfig.ts\";\n              export default OriginalModule.default;\n              export * from \"./src/infra/config/AppConfig.ts\";", ";!function(){try{var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},n=(new Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]=\"ae206fa4-13b1-401e-966f-cbc317611b45\",e._sentryDebugIdIdentifier=\"sentry-dbid-ae206fa4-13b1-401e-966f-cbc317611b45\")}catch(e){}}();", "import dotenv from 'dotenv';\nimport {\n  ConfigValue,\n  IAppConfig,\n} from '../../application/protocols/config/IAppConfig';\n\ndotenv.config({ path: `${__dirname}/../../../.env` });\n\nconst ENVS = [\n  'NODE_ENV',\n  'LOG_LEVEL',\n  'MONGO_URL',\n  'AWS_REGION',\n  'AWS_COGNITO_CLIENT_ID',\n  'AWS_COGNITO_USER_POOL_ID',\n  'PUBLIC_IMAGES_BUCKET_NAME',\n  'TOPIC_ARN',\n];\n\nexport class AppConfig implements IAppConfig {\n  private readonly configValues: ConfigValue = {};\n\n  constructor() {\n    ENVS.forEach((env: string) => {\n      const value = process.env[env];\n      if (!value) throw new Error(`ENV_NOT_DEFINED_OR_MISSING: ${env}`);\n      this.configValues[env] = value;\n    });\n  }\n\n  public getValue(key: string): string {\n    const env = this.configValues[key];\n    if (!env) throw new Error(`ENV_NOT_DEFINED_OR_MISSING: ${key}`);\n    return env;\n  }\n\n  public isLocal(): boolean {\n    const config = this.getValue('NODE_ENV');\n    return ['LOCAL'].includes(config.toUpperCase());\n  }\n\n  public isProduction(): boolean {\n    const config = this.getValue('NODE_ENV');\n    return ['PRD', 'PROD', 'PRODUCTION'].includes(config.toUpperCase());\n  }\n}\n"],
  "mappings": "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",
  "names": ["require_package", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "fs", "path", "os", "crypto", "packageJson", "version", "LINE", "parse", "src", "obj", "lines", "match", "key", "value", "maybeQuote", "_parseVault", "options", "vaultPath", "_vaultPath", "result", "DotenvModule", "keys", "_dotenvKey", "length", "decrypted", "attrs", "_instructions", "error", "_log", "message", "_warn", "_debug", "dotenvKey", "uri", "environment", "environmentKey", "ciphertext", "dotenvPath", "_resolveHome", "envPath", "_configVault", "parsed", "processEnv", "configDotenv", "encoding", "debug", "e", "config", "decrypt", "encrypted", "keyStr", "nonce", "authTag", "aesgcm", "isRange", "invalidKeyLength", "decryptionFailed", "msg", "populate", "override", "AppConfig_exports", "__export", "AppConfig", "AppConfig_default", "__toCommonJS", "n", "import_dotenv", "dotenv", "ENVS", "AppConfig", "env", "value", "key", "config", "AppConfig_default"]
}
