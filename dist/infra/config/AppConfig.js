var I=Object.create;var d=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),j=(e,t)=>{for(var n in t)d(e,n,{get:t[n],enumerable:!0})},h=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of k(t))!L.call(e,o)&&o!==n&&d(e,o,{get:()=>t[o],enumerable:!(s=T(t,o))||s.enumerable});return e};var R=(e,t,n)=>(n=e!=null?I($(e)):{},h(t||!e||!e.__esModule?d(n,"default",{value:e,enumerable:!0}):n,e)),A=e=>h(d({},"__esModule",{value:!0}),e);var y=m((te,x)=>{x.exports={name:"dotenv",version:"16.3.2",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://github.com/motdotla/dotenv?sponsor=1",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var O=m((ne,c)=>{var b=require("fs"),g=require("path"),C=require("os"),S=require("crypto"),K=y(),v=K.version,U=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function P(e){let t={},n=e.toString();n=n.replace(/\r\n?/mg,`
`);let s;for(;(s=U.exec(n))!=null;){let o=s[1],r=s[2]||"";r=r.trim();let i=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),i==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),t[o]=r}return t}function M(e){let t=D(e),n=a.configDotenv({path:t});if(!n.parsed)throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);let s=N(e).split(","),o=s.length,r;for(let i=0;i<o;i++)try{let l=s[i].trim(),u=F(n,l);r=a.decrypt(u.ciphertext,u.key);break}catch(l){if(i+1>=o)throw l}return a.parse(r)}function Y(e){console.log(`[dotenv@${v}][INFO] ${e}`)}function B(e){console.log(`[dotenv@${v}][WARN] ${e}`)}function f(e){console.log(`[dotenv@${v}][DEBUG] ${e}`)}function N(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function F(e,t){let n;try{n=new URL(t)}catch(l){throw l.code==="ERR_INVALID_URL"?new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development"):l}let s=n.password;if(!s)throw new Error("INVALID_DOTENV_KEY: Missing key part");let o=n.searchParams.get("environment");if(!o)throw new Error("INVALID_DOTENV_KEY: Missing environment part");let r=`DOTENV_VAULT_${o.toUpperCase()}`,i=e.parsed[r];if(!i)throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);return{ciphertext:i,key:s}}function D(e){let t=g.resolve(process.cwd(),".env");return e&&e.path&&e.path.length>0&&(t=e.path),t.endsWith(".vault")?t:`${t}.vault`}function G(e){return e[0]==="~"?g.join(C.homedir(),e.slice(1)):e}function W(e){Y("Loading env from encrypted .env.vault");let t=a._parseVault(e),n=process.env;return e&&e.processEnv!=null&&(n=e.processEnv),a.populate(n,t,e),{parsed:t}}function q(e){let t=g.resolve(process.cwd(),".env"),n="utf8",s=!!(e&&e.debug);e&&(e.path!=null&&(t=G(e.path)),e.encoding!=null?n=e.encoding:s&&f("No encoding is specified. UTF-8 is used by default"));try{let o=a.parse(b.readFileSync(t,{encoding:n})),r=process.env;return e&&e.processEnv!=null&&(r=e.processEnv),a.populate(r,o,e),{parsed:o}}catch(o){return s&&f(`Failed to load ${t} ${o.message}`),{error:o}}}function J(e){let t=D(e);return N(e).length===0?a.configDotenv(e):b.existsSync(t)?a._configVault(e):(B(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),a.configDotenv(e))}function Q(e,t){let n=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),o=s.subarray(0,12),r=s.subarray(-16);s=s.subarray(12,-16);try{let i=S.createDecipheriv("aes-256-gcm",n,o);return i.setAuthTag(r),`${i.update(s)}${i.final()}`}catch(i){let l=i instanceof RangeError,u=i.message==="Invalid key length",V=i.message==="Unsupported state or unable to authenticate data";if(l||u){let p="INVALID_DOTENV_KEY: It must be 64 characters long (or more)";throw new Error(p)}else if(V){let p="DECRYPTION_FAILED: Please check your DOTENV_KEY";throw new Error(p)}else throw console.error("Error: ",i.code),console.error("Error: ",i.message),i}}function H(e,t,n={}){let s=!!(n&&n.debug),o=!!(n&&n.override);if(typeof t!="object")throw new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(o===!0&&(e[r]=t[r]),s&&f(o===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}var a={configDotenv:q,_configVault:W,_parseVault:M,config:J,decrypt:Q,parse:P,populate:H};c.exports.configDotenv=a.configDotenv;c.exports._configVault=a._configVault;c.exports._parseVault=a._parseVault;c.exports.config=a.config;c.exports.decrypt=a.decrypt;c.exports.parse=a.parse;c.exports.populate=a.populate;c.exports=a});var Z={};j(Z,{AppConfig:()=>E,default:()=>X});module.exports=A(Z);(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="ae206fa4-13b1-401e-966f-cbc317611b45",e._sentryDebugIdIdentifier="sentry-dbid-ae206fa4-13b1-401e-966f-cbc317611b45")}catch{}})();var w=R(O());w.default.config({path:`${__dirname}/../../../.env`});var z=["NODE_ENV","LOG_LEVEL","MONGO_URL","AWS_REGION","AWS_COGNITO_CLIENT_ID","AWS_COGNITO_USER_POOL_ID","PUBLIC_IMAGES_BUCKET_NAME","TOPIC_ARN"],E=class{configValues={};constructor(){z.forEach(t=>{let n=process.env[t];if(!n)throw new Error(`ENV_NOT_DEFINED_OR_MISSING: ${t}`);this.configValues[t]=n})}getValue(t){let n=this.configValues[t];if(!n)throw new Error(`ENV_NOT_DEFINED_OR_MISSING: ${t}`);return n}isLocal(){let t=this.getValue("NODE_ENV");return["LOCAL"].includes(t.toUpperCase())}isProduction(){let t=this.getValue("NODE_ENV");return["PRD","PROD","PRODUCTION"].includes(t.toUpperCase())}};var X=void 0;0&&(module.exports={AppConfig});
//# sourceMappingURL=AppConfig.js.map
