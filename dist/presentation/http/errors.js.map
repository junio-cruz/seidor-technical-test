{
  "version": 3,
  "sources": ["../../../src/presentation/http/errors.ts", "sentry-debug-id-stub:_sentry-debug-id-injection-stub?sentry-module-id=ae3f1f9d-2596-42d4-bb33-c28fccb7546d", "../../../src/presentation/http/errors.ts"],
  "sourcesContent": ["\n              import \"_sentry-debug-id-injection-stub\";\n              import * as OriginalModule from \"./src/presentation/http/errors.ts\";\n              export default OriginalModule.default;\n              export * from \"./src/presentation/http/errors.ts\";", ";!function(){try{var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},n=(new Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]=\"f62c7528-7211-481c-b528-bb024e932c19\",e._sentryDebugIdIdentifier=\"sentry-dbid-f62c7528-7211-481c-b528-bb024e932c19\")}catch(e){}}();", "/* eslint-disable max-classes-per-file */\n\nexport class HttpError extends Error {\n  constructor(\n    public readonly message: string,\n    public readonly data: any,\n    public readonly stack?: string,\n    public readonly statusCode = 500,\n  ) {\n    super(message);\n    this.name = 'HttpError';\n    Object.setPrototypeOf(this, HttpError.prototype);\n    Error.captureStackTrace(this, HttpError);\n  }\n}\n\nexport class HttpBadRequestError extends HttpError {\n  constructor(\n    public readonly data: Array<string>,\n    public readonly name = 'HttpBadRequestError',\n    public readonly stack?: string,\n    public readonly message = 'BAD_REQUEST',\n    public readonly statusCode = 400,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpBadRequestError.prototype);\n    Error.captureStackTrace(this, HttpBadRequestError);\n  }\n}\n\nexport class HttpConflictError extends HttpError {\n  constructor(\n    public readonly data: any,\n    public readonly stack?: string,\n    public readonly name = 'HttpConflictError',\n    public readonly message = 'CONFLICT',\n    public readonly statusCode = 409,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpConflictError.prototype);\n    Error.captureStackTrace(this, HttpConflictError);\n  }\n}\n\nexport class HttpForbiddenError extends HttpError {\n  constructor(\n    public readonly data = 'Authenticated user is not authorized',\n    public readonly stack?: string,\n    public readonly name = 'HttpForbiddenError',\n    public readonly message = 'FORBIDDEN',\n    public readonly statusCode = 403,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpForbiddenError.prototype);\n    Error.captureStackTrace(this, HttpForbiddenError);\n  }\n}\n\nexport class HttpNotFoundError extends HttpError {\n  constructor(\n    public readonly data: any,\n    public readonly stack?: string,\n    public readonly name = 'HttpNotFoundError',\n    public readonly message = 'NOT_FOUND',\n    public readonly statusCode = 404,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpNotFoundError.prototype);\n    Error.captureStackTrace(this, HttpNotFoundError);\n  }\n}\n\nexport class HttpInternalServerError extends HttpError {\n  constructor(\n    public readonly data: Error,\n    public readonly stack?: string,\n    public readonly name = 'HttpInternalServerError',\n    public readonly message = 'INTERNAL_SERVER_ERROR',\n    public readonly statusCode = 500,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpInternalServerError.prototype);\n    Error.captureStackTrace(this, HttpInternalServerError);\n  }\n}\n\nexport class HttpUnauthorizedError extends HttpError {\n  constructor(\n    public readonly data = 'User must be authenticated',\n    public readonly stack?: string,\n    public readonly name = 'HttpUnauthorizedError',\n    public readonly message = 'UNAUTHORIZED',\n    public readonly statusCode = 401,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpUnauthorizedError.prototype);\n    Error.captureStackTrace(this, HttpUnauthorizedError);\n  }\n}\n\nexport class HttpUnprocessableEntityError extends HttpError {\n  constructor(\n    public readonly data: string,\n    public readonly stack?: string,\n    public readonly name = 'HttpUnprocessableEntityError',\n    public readonly message = 'UNPROCESSABLE_ENTITY',\n    public readonly statusCode = 422,\n  ) {\n    super(message, data, stack, statusCode);\n    Object.setPrototypeOf(this, HttpUnprocessableEntityError.prototype);\n    Error.captureStackTrace(this, HttpUnprocessableEntityError);\n  }\n}\n"],
  "mappings": "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",
  "names": ["errors_exports", "__export", "HttpBadRequestError", "HttpConflictError", "HttpError", "HttpForbiddenError", "HttpInternalServerError", "HttpNotFoundError", "HttpUnauthorizedError", "HttpUnprocessableEntityError", "errors_default", "__toCommonJS", "e", "n", "HttpError", "_HttpError", "message", "data", "stack", "statusCode", "HttpBadRequestError", "_HttpBadRequestError", "name", "HttpConflictError", "_HttpConflictError", "HttpForbiddenError", "_HttpForbiddenError", "HttpNotFoundError", "_HttpNotFoundError", "HttpInternalServerError", "_HttpInternalServerError", "HttpUnauthorizedError", "_HttpUnauthorizedError", "HttpUnprocessableEntityError", "_HttpUnprocessableEntityError", "errors_default"]
}
