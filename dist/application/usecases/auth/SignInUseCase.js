var u=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var g=(t,e)=>{for(var r in e)u(t,r,{get:e[r],enumerable:!0})},I=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of m(e))!U.call(t,i)&&i!==r&&u(t,i,{get:()=>e[i],enumerable:!(s=d(e,i))||s.enumerable});return t};var S=t=>I(u({},"__esModule",{value:!0}),t);var f={};g(f,{SignInUserUseCase:()=>p,default:()=>h});module.exports=S(f);(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[e]="5203ddc7-0034-41d2-bda8-b63fe6b34ec8",t._sentryDebugIdIdentifier="sentry-dbid-5203ddc7-0034-41d2-bda8-b63fe6b34ec8")}catch{}})();var o=class{async createUser(e){return console.log(e),{userName:e.user_id,userEmail:e.email}}async getUser(e){return console.log(e),{userName:"User Name",userEmail:"user@fanzo.com"}}async deleteUser(e){console.log(e)}async setPhoneNumber(e){console.log(e)}async setUserPassword(e){console.log(e)}async setEmailVerified(e){console.log(e)}async initiateAuth(e){return console.log(e),{access_token:"access_token",refresh_token:"refresh_token",expires_in:30}}async revalidateAuth(e){return console.log(e),{access_token:"access_token",expires_in:30}}};var a=class{constructor(e){this.entityModel=e;this.clientSession=e}clientSession;start(){return this.clientSession=[],!!this.clientSession}getSession(){if(this.clientSession)return this.clientSession;throw new Error("START_DATABASE_ERROR")}updateSession(e){return this.clientSession=e,this.clientSession}},c=new a([]);var n=class{async execute(e){return c.getSession().find(s=>s.user_id===e.user_id||s.auth_token===e.user_id||s.email===e.user_id)||null}};var p=class{constructor(e,r=new o,s=new n){this.logger=e;this.identityServiceProvider=r;this.getUserRepository=s;this.logger=this.logger.getChild("SignInUserUseCase")}async execute(e){this.logger.debug("execute input",JSON.stringify(e));let r=e.email.toLowerCase(),s=await this.getUserRepository.execute({user_id:r});if(this.logger.debug("get user repository response",s),!s)throw new Error("USER_NOT_FOUND");if(!s.email_verified)throw new Error("USER_NOT_CONFIRMED");let i=await this.identityServiceProvider.initiateAuth({email:r,password:e.password});if(this.logger.debug("identityServiceProvider initiateAuth",i),!i)throw new Error("USER_NOT_FOUND");return this.logger.debug("execute output",i),{...i,user_id:s.user_id}}};var h=void 0;0&&(module.exports={SignInUserUseCase});
//# sourceMappingURL=SignInUseCase.js.map
